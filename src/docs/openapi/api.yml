openapi: 3.0.0
info:
  version: 1.0.0
  title: niias
paths:
  /schedule:
    get:
      summary: 'Возвращает список "Расписание" определенного поезда'
      parameters:
        - name: trainNumber
          in: query
          description: Номер поезда
          required: true
          schema:
            type: integer
            default: false
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduleList'

    post:
      summary: 'Добавляет объект "Расписание" в список расписаний'
      parameters:
        - name: trainNumber
          in: query
          description: Номер поезда
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Schedule'

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: OK

  /schedule/list:
    get:
      summary: "Возвращает список расписаний соответсвующих временному промежутку"
      parameters:
        - name: startDataTime
          in: query
          description: Начало промежутка поиска расписания
          required: true
          schema:
            type: object
            default: false
        - name: endDataTime
          in: query
          description: Конец промежутка поиска расписания
          required: false
          schema:
            type: object
            default: false
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduleList'

  /rolling-stock:
    get:
      summary: "возвращает поезд по его номеру"
      parameters:
        - name: number
          in: query
          description: Номер поезда
          required: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RollingStock'

  /rolling-stock/{id}:
    get:
      summary: "возвращает поезд по его id"
      parameters:
        - in: path
          name: id
          schema:
            type: integer
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RollingStock'

  /rolling-stock/list:
    get:
      summary: "возвращает список поездов"
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RollingStockList'


  /drivers:
    get:
      summary: "Возвращает список машинистов"
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Driver'

  /drivers/{id}:
    get:
      summary: "Возвращает машиниста по id"
#      parameters:
#        - in: path
#          name: id
#          schema:
#            type: integer
#      responses:
#        200:
#          description: Successful response
#          content:
#            application/json:
#              schema:
#                items:
#                  $ref: '#/components/schemas/Driver'
    requestBody:
      $ref: '#/components/schemas/Driver'

  /delete/{id}:
    post:
      summary: "Удаление машиниста по id"
      parameters:
        - in: path
          name: id
          schema:
            type: integer
      responses:
        200:
          description: Successful delete


  /drivers/available:
    get:
      summary: "Возвращаеит список свободных машинистов"
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Driver'

components:
  schemas:
    CodsOfTechnicalOperationWithTrains:
      description: Список операций с составом
      type: string
      enum:
        - 1 - TRAINSERVICE
        - 2 - WASHING
        - 3 - DRYCLEANING
        - 4 - BASICCLEANING
        - 5 - EQUIPMENT
        - 6 - WASHINGANDDRYCLEANING
        - 7 - EQUIPMENTANDBASICCLEANING
        - 8 - MAINTENANCE2
        - 9 - MAINTENANCE3
        - 10 - ENGINEERINGWORKS

    ScheduleList:
      description: Список расписаний
      type: array
      items:
        $ref: '#/components/schemas/Schedule'

    Schedule:
      description: Объект "Расписание"
      type: object
      properties:
        id:
          type: integer
          format: int32

        codOfTechnicalOperationWithTrains:
          type: integer
          format: int32

        trainNumber:
          type: integer
          format: int32

        trainIndex:
          type: integer
          format: int32

        countTrainOnLine:
          type: integer
          format: int32

        sequentialNumberOfBrigade:
          type: integer
          format: int32

        driverNumber:
          type: integer
          format: int32

        codeOfDepartureStation:
          type: integer
          format: int32

        codeOfDepartureStationWithBrigade:
          type: integer
          format: int32

        departureTime:
          type: string
          format: 'date-time'

        departureTimeWithBrigade:
          type: string
          format: 'date-time'

        codeOfArrivalStation:
          type: integer
          format: int32

        codeOfArrivalStationWithBrigade:
          type: integer
          format: int32

        arrivalTime:
          type: string
          format: 'date-time'

        arrivalTimeWithBrigade:
          type: string
          format: 'date-time'

        codeOfHeadWagon:
          type: string

    Driver:
      description: Объект "Машинист"
      type: object
      properties:
        id:
          type: integer
          format: int32

        number:
          type: integer
          format: int32

        firstName:
          type: string

        middleName:
          type: string

        lastName:
          type: string

        isAvailable:
          type: boolean

    RollingStockList:
      description: Список поездов
      type: object
      items:
        $ref: '#/components/schemas/RollingStock'

    RollingStock:
      description: Объект "Подвижной состав"
      type: object
      properties:
        id:
          type: integer
          format: int32

        model:
          type: string

        number:
          type: integer
          format: int32